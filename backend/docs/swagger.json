{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API Playlist Vidoe",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/bloodtypes": {
            "get": {
                "description": "list bloodtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bloodtype entities",
                "operationId": "list-bloodtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bloodtype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bloodtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bloodtype",
                "operationId": "create-bloodtype",
                "parameters": [
                    {
                        "description": "Bloodtype entity",
                        "name": "bloodtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Bloodtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bloodtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bloodtypes/{id}": {
            "get": {
                "description": "get bloodtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bloodtype entity by ID",
                "operationId": "get-bloodtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bloodtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bloodtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/certificates": {
            "get": {
                "description": "list certificate entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List certificate entities",
                "operationId": "list-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Certificate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create certificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create certificate",
                "operationId": "create-certificate",
                "parameters": [
                    {
                        "description": "Certificate entity",
                        "name": "certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/certificates/{id}": {
            "get": {
                "description": "get certificate by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a certificate entity by ID",
                "operationId": "get-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update certificate by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a certificate entity by ID",
                "operationId": "update-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Certificate entity",
                        "name": "certificate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Certificate"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get certificate by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a certificate entity by ID",
                "operationId": "delete-certificate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Certificate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/coveredpersons": {
            "get": {
                "description": "list coveredperson entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List coveredperson entities",
                "operationId": "list-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CoveredPerson"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create coveredperson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create coveredperson",
                "operationId": "create-coveredperson",
                "parameters": [
                    {
                        "description": "CoveredPerson entity",
                        "name": "coveredperson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CoveredPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/coveredpersons/{id}": {
            "get": {
                "description": "get coveredperson by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a coveredperson entity by ID",
                "operationId": "get-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update coveredperson by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a coveredperson entity by ID",
                "operationId": "update-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CoveredPerson entity",
                        "name": "coveredperson",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CoveredPerson"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get coveredperson by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a coveredperson entity by ID",
                "operationId": "delete-coveredperson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CoveredPerson ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "description": "list department entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List department entities",
                "operationId": "list-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Department"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Department",
                "operationId": "create-department",
                "parameters": [
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "get": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a department entity by ID",
                "operationId": "get-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a department entity by ID",
                "operationId": "update-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a department entity by ID",
                "operationId": "delete-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diagnoses": {
            "get": {
                "description": "list Diagnose entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Diagnose entities",
                "operationId": "list-diagnose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Diagnose"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create diagnose",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create diagnose",
                "operationId": "create-diagnose",
                "parameters": [
                    {
                        "description": "Diagnose entity",
                        "name": "diagnose",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Diagnose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Diagnose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diagnoses/{id}": {
            "get": {
                "description": "get diagnose by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a diagnose entity by ID",
                "operationId": "get-drugAllergy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Diagnose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Diagnose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update diagnose by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a diagnose entity by ID",
                "operationId": "update-diagnose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Diagnose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Diagnose entity",
                        "name": "drugAllergy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Diagnose"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Diagnose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get diagnose by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a diagnose entity by ID",
                "operationId": "delete-diagnose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Diagnose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases": {
            "get": {
                "description": "list disease entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List disease entities",
                "operationId": "list-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Disease"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create disease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create disease",
                "operationId": "create-disease",
                "parameters": [
                    {
                        "description": "Disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/diseases/{id}": {
            "get": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a disease entity by ID",
                "operationId": "get-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update disease by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a disease entity by ID",
                "operationId": "update-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disease entity",
                        "name": "disease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Disease"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get disease by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a disease entity by ID",
                "operationId": "delete-disease",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disease ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/doctors": {
            "get": {
                "description": "list doctor entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List doctor entities",
                "operationId": "list-doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Doctor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create doctor",
                "operationId": "create-doctor",
                "parameters": [
                    {
                        "description": "Doctor entity",
                        "name": "doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Doctor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/doctors/{id}": {
            "get": {
                "description": "get doctor by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a doctor entity by ID",
                "operationId": "get-doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Doctor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Doctor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update doctor by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a doctor entity by ID",
                "operationId": "update-doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Doctor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Doctor entity",
                        "name": "doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Doctor"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get doctor by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a doctor entity by ID",
                "operationId": "delete-doctor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Doctor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/drugs": {
            "get": {
                "description": "list drug entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List drug entities",
                "operationId": "list-drug",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Drug"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create drug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create drug",
                "operationId": "create-drug",
                "parameters": [
                    {
                        "description": "Drug entity",
                        "name": "drug",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Drug"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Drug"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/drugs/{id}": {
            "get": {
                "description": "get drug by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a drug entity by ID",
                "operationId": "get-drug",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Drug ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Drug"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/examinationrooms": {
            "get": {
                "description": "list examinationroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List examinationroom entities",
                "operationId": "list-examinationroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Examinationroom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create examinationroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create examinationroom",
                "operationId": "create-examinationroom",
                "parameters": [
                    {
                        "description": "Examinationroom entity",
                        "name": "examinationroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Examinationroom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Examinationroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/examinationrooms/{id}": {
            "get": {
                "description": "get examinationroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a examinationroom entity by ID",
                "operationId": "get-examinationroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Examinationroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Examinationroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update examinationroom by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a examinationroom entity by ID",
                "operationId": "update-examinationroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "examinationroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "examinationroom entity",
                        "name": "examinationroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Examinationroom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Examinationroom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get examinationroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a examinationroom entity by ID",
                "operationId": "delete-examinationroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "examinationroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/funds": {
            "get": {
                "description": "list fund entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fund entities",
                "operationId": "list-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Fund"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fund",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fund",
                "operationId": "create-fund",
                "parameters": [
                    {
                        "description": "Fund entity",
                        "name": "fund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/funds/{id}": {
            "get": {
                "description": "get fund by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fund entity by ID",
                "operationId": "get-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update fund by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a fund entity by ID",
                "operationId": "update-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "fund entity",
                        "name": "fund",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fund"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fund by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fund entity by ID",
                "operationId": "delete-fund",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fund ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders": {
            "get": {
                "description": "list gender entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List gender entities",
                "operationId": "list-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Gender"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create gender",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create gender",
                "operationId": "create-gender",
                "parameters": [
                    {
                        "description": "Gender entity",
                        "name": "gender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders/{id}": {
            "get": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a gender entity by ID",
                "operationId": "get-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicals": {
            "get": {
                "description": "list medical entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List medical entities",
                "operationId": "list-medical",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Medical"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create medical",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create medical",
                "operationId": "create-medical",
                "parameters": [
                    {
                        "description": "Medical entity",
                        "name": "medical",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Medical"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Medical"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/medicals/{id}": {
            "get": {
                "description": "get medical by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a medical entity by ID",
                "operationId": "get-medical",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medical ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Medical"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update medical by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a medical entity by ID",
                "operationId": "update-medical",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medical ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medical entity",
                        "name": "medical",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Medical"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Medical"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get medical by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a medical entity by ID",
                "operationId": "delete-medical",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Medical ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/nurses": {
            "get": {
                "description": "list nurse entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List nurse entities",
                "operationId": "list-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Nurse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create nurse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create nurse",
                "operationId": "create-nurse",
                "parameters": [
                    {
                        "description": "Nurse entity",
                        "name": "nurse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/nurses/{id}": {
            "get": {
                "description": "get nurse by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a nurse entity by ID",
                "operationId": "get-nurse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nurse ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Nurse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/operativerecords": {
            "get": {
                "description": "list operativerecord entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List operativerecord entities",
                "operationId": "list-operativerecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Operativerecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create operativerecord",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create operativerecord",
                "operationId": "create-operativerecord",
                "parameters": [
                    {
                        "description": "Operativerecord entity",
                        "name": "operativerecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Operativerecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operativerecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/operativerecords/{id}": {
            "get": {
                "description": "get operativerecord by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a operativerecord entity by ID",
                "operationId": "get-operativerecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Operativerecord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operativerecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update operativerecord by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a operativerecord entity by ID",
                "operationId": "update-operativerecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Operativerecord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Operativerecord entity",
                        "name": "operativerecord",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Operativerecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operativerecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get operativerecord by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a operativerecord entity by ID",
                "operationId": "delete-operativerecord",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Operativerecord ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/operatives": {
            "get": {
                "description": "list operative entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List operative entities",
                "operationId": "list-operative",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Operative"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create operative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create operative",
                "operationId": "create-operative",
                "parameters": [
                    {
                        "description": "Operative entity",
                        "name": "operative",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Operative"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operative"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/operatives/{id}": {
            "get": {
                "description": "get operative by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a operative entity by ID",
                "operationId": "get-operative",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Operative ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operative"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update operative by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a operative entity by ID",
                "operationId": "update-operative",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "operative ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Operative entity",
                        "name": "operative",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Operative"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Operative"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get operative by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a operative entity by ID",
                "operationId": "delete-operative",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "operative ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients": {
            "get": {
                "description": "list patient entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List patient entities",
                "operationId": "list-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Patient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create patient",
                "operationId": "create-patient",
                "parameters": [
                    {
                        "description": "Patient entity",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/patients/{id}": {
            "get": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a patient entity by ID",
                "operationId": "get-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update patient by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a patient entity by ID",
                "operationId": "update-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient entity",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Patient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get patient by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a patient entity by ID",
                "operationId": "delete-patient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Patient ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/prefixs": {
            "get": {
                "description": "list prefix entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List prefix entities",
                "operationId": "list-prefix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Prefix"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create prefix",
                "operationId": "create-prefix",
                "parameters": [
                    {
                        "description": "Prefix entity",
                        "name": "prefix",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Prefix"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Prefix"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/prefixs/{id}": {
            "get": {
                "description": "get prefix by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a prefix entity by ID",
                "operationId": "get-prefix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prefix ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Prefix"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/prescriptions": {
            "get": {
                "description": "list prescription entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List prescription entities",
                "operationId": "list-prescription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Prescription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create prescription",
                "operationId": "create-prescription",
                "parameters": [
                    {
                        "description": "Prescription entity",
                        "name": "prescription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Prescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Prescription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/prescriptions/{id}": {
            "get": {
                "description": "get prescription by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a prescription entity by ID",
                "operationId": "get-prescription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prescription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Prescription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update prescription by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a prescription entity by ID",
                "operationId": "update-prescription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prescription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prescription entity",
                        "name": "drugAllergy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Prescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Prescription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get prescription by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a prescription entity by ID",
                "operationId": "delete-prescription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Prescription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rents": {
            "get": {
                "description": "list rent entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List rent entities",
                "operationId": "list-rent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Rent"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create rent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create rent",
                "operationId": "create-rent",
                "parameters": [
                    {
                        "description": "Rent entity",
                        "name": "rent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Rent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rents/{id}": {
            "get": {
                "description": "get rent by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a rent entity by ID",
                "operationId": "get-rent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update rent by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a rent entity by ID",
                "operationId": "update-rent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rent entity",
                        "name": "rent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Rent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Rent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get rent by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a rent entity by ID",
                "operationId": "delete-rent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "list room entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List room entities",
                "operationId": "list-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create room",
                "operationId": "create-room",
                "parameters": [
                    {
                        "description": "Room entity",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "get room by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a room entity by ID",
                "operationId": "get-room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomtypes": {
            "get": {
                "description": "list roomtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List roomtype entities",
                "operationId": "list-roomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Roomtype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create roomtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create roomtype",
                "operationId": "create-roomtype",
                "parameters": [
                    {
                        "description": "Roomtype entity",
                        "name": "roomtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Roomtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roomtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roomtypes/{id}": {
            "get": {
                "description": "get roomtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a roomtype entity by ID",
                "operationId": "get-roomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roomtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roomtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schemeTypes": {
            "get": {
                "description": "list schemeType entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List schemeType entities",
                "operationId": "list-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.SchemeType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create schemeType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create schemeType",
                "operationId": "create-schemeType",
                "parameters": [
                    {
                        "description": "SchemeType entity",
                        "name": "schemeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/schemeTypes/{id}": {
            "get": {
                "description": "get schemeType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a schemeType entity by ID",
                "operationId": "get-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update schemeType by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a schemeType entity by ID",
                "operationId": "update-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SchemeType entity",
                        "name": "schemeType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.SchemeType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get schemeType by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a schemeType entity by ID",
                "operationId": "delete-schemeType",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SchemeType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/tools": {
            "get": {
                "description": "list tool entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List tool entities",
                "operationId": "list-tool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Tool"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create tool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create tool",
                "operationId": "create-tool",
                "parameters": [
                    {
                        "description": "Tool entity",
                        "name": "tool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Tool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Tool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/tools/{id}": {
            "get": {
                "description": "get tool by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a tool entity by ID",
                "operationId": "get-tool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tool ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Tool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update tool by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a tool entity by ID",
                "operationId": "update-tool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tool ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tool entity",
                        "name": "tool",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Tool"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Tool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get tool by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a tool entity by ID",
                "operationId": "delete-tool",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tool ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CoveredPerson": {
            "type": "object",
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "fund": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                },
                "schemeType": {
                    "type": "integer"
                }
            }
        },
        "controllers.Diagnose": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "integer"
                },
                "disease": {
                    "type": "integer"
                },
                "doctor": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                }
            }
        },
        "controllers.Operativerecord": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "examinationroom": {
                    "type": "integer"
                },
                "nurse": {
                    "type": "integer"
                },
                "operative": {
                    "type": "integer"
                },
                "tool": {
                    "type": "integer"
                }
            }
        },
        "controllers.Patient": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "string"
                },
                "bloodtype": {
                    "type": "integer"
                },
                "gender": {
                    "type": "integer"
                },
                "height": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "integer"
                },
                "weight": {
                    "type": "string"
                }
            }
        },
        "controllers.Prescription": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "doctor": {
                    "type": "integer"
                },
                "drug": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "nurse": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                }
            }
        },
        "controllers.Rent": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "nurse": {
                    "type": "integer"
                },
                "patient": {
                    "type": "integer"
                },
                "room": {
                    "type": "integer"
                }
            }
        },
        "controllers.Room": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "integer"
                },
                "floor": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "roomType": {
                    "type": "integer"
                }
            }
        },
        "ent.Bloodtype": {
            "type": "object",
            "properties": {
                "BTname": {
                    "description": "BTname holds the value of the \"BTname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BloodtypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BloodtypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BloodtypeEdges": {
            "type": "object",
            "properties": {
                "frombloodtype": {
                    "description": "Frombloodtype holds the value of the frombloodtype edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patient"
                    }
                }
            }
        },
        "ent.Certificate": {
            "type": "object",
            "properties": {
                "Certificate_Name": {
                    "description": "CertificateName holds the value of the \"Certificate_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CertificateQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CertificateEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CertificateEdges": {
            "type": "object",
            "properties": {
                "certificateCoveredPerson": {
                    "description": "CertificateCoveredPerson holds the value of the Certificate_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.CoveredPerson": {
            "type": "object",
            "properties": {
                "certificate_id": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CoveredPersonQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CoveredPersonEdges"
                },
                "fund_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "patient_id": {
                    "type": "integer"
                },
                "schemeType_id": {
                    "type": "integer"
                }
            }
        },
        "ent.CoveredPersonEdges": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "Certificate holds the value of the Certificate edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Certificate"
                },
                "fund": {
                    "description": "Fund holds the value of the Fund edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Fund"
                },
                "patient": {
                    "description": "Patient holds the value of the Patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "schemeType": {
                    "description": "SchemeType holds the value of the SchemeType edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SchemeType"
                }
            }
        },
        "ent.Department": {
            "type": "object",
            "properties": {
                "Department_Name": {
                    "description": "DepartmentName holds the value of the \"Department_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DepartmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DepartmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DepartmentEdges": {
            "type": "object",
            "properties": {
                "departmentDiagnose": {
                    "description": "DepartmentDiagnose holds the value of the department_diagnose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Diagnose"
                    }
                }
            }
        },
        "ent.Diagnose": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DiagnoseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DiagnoseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DiagnoseEdges": {
            "type": "object",
            "properties": {
                "department": {
                    "description": "Department holds the value of the department edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Department"
                },
                "disease": {
                    "description": "Disease holds the value of the disease edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Disease"
                },
                "doctor": {
                    "description": "Doctor holds the value of the doctor edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Doctor"
                },
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                }
            }
        },
        "ent.Disease": {
            "type": "object",
            "properties": {
                "Disease_Name": {
                    "description": "DiseaseName holds the value of the \"Disease_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DiseaseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DiseaseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DiseaseEdges": {
            "type": "object",
            "properties": {
                "diseaseDiagnose": {
                    "description": "DiseaseDiagnose holds the value of the disease_diagnose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Diagnose"
                    }
                }
            }
        },
        "ent.Doctor": {
            "type": "object",
            "properties": {
                "Doctor_Email": {
                    "description": "DoctorEmail holds the value of the \"Doctor_Email\" field.",
                    "type": "string"
                },
                "Doctor_Name": {
                    "description": "DoctorName holds the value of the \"Doctor_Name\" field.",
                    "type": "string"
                },
                "Doctor_Password": {
                    "description": "DoctorPassword holds the value of the \"Doctor_Password\" field.",
                    "type": "string"
                },
                "Doctor_tel": {
                    "description": "DoctorTel holds the value of the \"Doctor_tel\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DoctorQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DoctorEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DoctorEdges": {
            "type": "object",
            "properties": {
                "doctorDiagnose": {
                    "description": "DoctorDiagnose holds the value of the doctor_diagnose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Diagnose"
                    }
                },
                "doctorPrescription": {
                    "description": "DoctorPrescription holds the value of the doctor_prescription edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Prescription"
                    }
                }
            }
        },
        "ent.Drug": {
            "type": "object",
            "properties": {
                "Drug_Name": {
                    "description": "DrugName holds the value of the \"Drug_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DrugQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DrugEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DrugEdges": {
            "type": "object",
            "properties": {
                "drugPrescription": {
                    "description": "DrugPrescription holds the value of the drug_prescription edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Prescription"
                    }
                }
            }
        },
        "ent.Examinationroom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ExaminationroomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ExaminationroomEdges"
                },
                "examinationroom_name": {
                    "description": "ExaminationroomName holds the value of the \"examinationroom_name\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ExaminationroomEdges": {
            "type": "object",
            "properties": {
                "examinationroomOperativerecord": {
                    "description": "ExaminationroomOperativerecord holds the value of the Examinationroom_Operativerecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Operativerecord"
                    }
                }
            }
        },
        "ent.Fund": {
            "type": "object",
            "properties": {
                "Fund_Name": {
                    "description": "FundName holds the value of the \"Fund_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FundQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FundEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FundEdges": {
            "type": "object",
            "properties": {
                "fundCoveredPerson": {
                    "description": "FundCoveredPerson holds the value of the Fund_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.Gender": {
            "type": "object",
            "properties": {
                "Gname": {
                    "description": "Gname holds the value of the \"Gname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the GenderQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.GenderEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.GenderEdges": {
            "type": "object",
            "properties": {
                "fromgender": {
                    "description": "Fromgender holds the value of the fromgender edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patient"
                    }
                }
            }
        },
        "ent.Medical": {
            "type": "object",
            "properties": {
                "Medical_Email": {
                    "description": "MedicalEmail holds the value of the \"Medical_Email\" field.",
                    "type": "string"
                },
                "Medical_Name": {
                    "description": "MedicalName holds the value of the \"Medical_Name\" field.",
                    "type": "string"
                },
                "Medical_Password": {
                    "description": "MedicalPassword holds the value of the \"Medical_Password\" field.",
                    "type": "string"
                },
                "Medical_Tel": {
                    "description": "MedicalTel holds the value of the \"Medical_Tel\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.Nurse": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the NurseQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.NurseEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "nurse_email": {
                    "description": "NurseEmail holds the value of the \"nurse_email\" field.",
                    "type": "string"
                },
                "nurse_name": {
                    "description": "NurseName holds the value of the \"nurse_name\" field.",
                    "type": "string"
                },
                "nurse_password": {
                    "description": "NursePassword holds the value of the \"nurse_password\" field.",
                    "type": "string"
                },
                "nurse_tel": {
                    "description": "NurseTel holds the value of the \"nurse_tel\" field.",
                    "type": "string"
                }
            }
        },
        "ent.NurseEdges": {
            "type": "object",
            "properties": {
                "fromnurse": {
                    "description": "Fromnurse holds the value of the fromnurse edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Rent"
                    }
                },
                "nurseOperativerecord": {
                    "description": "NurseOperativerecord holds the value of the Nurse_Operativerecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Operativerecord"
                    }
                },
                "nursePrescription": {
                    "description": "NursePrescription holds the value of the nurse_prescription edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Prescription"
                    }
                }
            }
        },
        "ent.Operative": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the OperativeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.OperativeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "operative_Name": {
                    "description": "OperativeName holds the value of the \"operative_Name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.OperativeEdges": {
            "type": "object",
            "properties": {
                "operativeOperativerecord": {
                    "description": "OperativeOperativerecord holds the value of the Operative_Operativerecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Operativerecord"
                    }
                }
            }
        },
        "ent.Operativerecord": {
            "type": "object",
            "properties": {
                "OperativeTime": {
                    "description": "OperativeTime holds the value of the \"OperativeTime\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the OperativerecordQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.OperativerecordEdges"
                },
                "examinationroom_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "nurse_id": {
                    "type": "integer"
                },
                "operative_id": {
                    "type": "integer"
                },
                "tool_id": {
                    "type": "integer"
                }
            }
        },
        "ent.OperativerecordEdges": {
            "type": "object",
            "properties": {
                "examinationroom": {
                    "description": "Examinationroom holds the value of the Examinationroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Examinationroom"
                },
                "nurse": {
                    "description": "Nurse holds the value of the Nurse edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Nurse"
                },
                "operative": {
                    "description": "Operative holds the value of the Operative edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Operative"
                },
                "tool": {
                    "description": "Tool holds the value of the Tool edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Tool"
                }
            }
        },
        "ent.Patient": {
            "type": "object",
            "properties": {
                "Patient_age": {
                    "description": "PatientAge holds the value of the \"Patient_age\" field.",
                    "type": "integer"
                },
                "Patient_height": {
                    "description": "PatientHeight holds the value of the \"Patient_height\" field.",
                    "type": "number"
                },
                "Patient_name": {
                    "description": "PatientName holds the value of the \"Patient_name\" field.",
                    "type": "string"
                },
                "Patient_weight": {
                    "description": "PatientWeight holds the value of the \"Patient_weight\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PatientQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PatientEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PatientEdges": {
            "type": "object",
            "properties": {
                "bloodtype": {
                    "description": "Bloodtype holds the value of the bloodtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Bloodtype"
                },
                "frompatient": {
                    "description": "Frompatient holds the value of the frompatient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Rent"
                },
                "gender": {
                    "description": "Gender holds the value of the gender edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Gender"
                },
                "patientCoveredPerson": {
                    "description": "PatientCoveredPerson holds the value of the Patient_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                },
                "patientDiagnose": {
                    "description": "PatientDiagnose holds the value of the patient_diagnose edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Diagnose"
                    }
                },
                "patientPrescription": {
                    "description": "PatientPrescription holds the value of the patient_prescription edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Prescription"
                    }
                },
                "prefix": {
                    "description": "Prefix holds the value of the prefix edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Prefix"
                }
            }
        },
        "ent.Prefix": {
            "type": "object",
            "properties": {
                "Pname": {
                    "description": "Pname holds the value of the \"Pname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PrefixQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PrefixEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PrefixEdges": {
            "type": "object",
            "properties": {
                "fromprefix": {
                    "description": "Fromprefix holds the value of the fromprefix edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Patient"
                    }
                }
            }
        },
        "ent.Prescription": {
            "type": "object",
            "properties": {
                "Prescrip_DateTime": {
                    "description": "PrescripDateTime holds the value of the \"Prescrip_DateTime\" field.",
                    "type": "string"
                },
                "Prescrip_Note": {
                    "description": "PrescripNote holds the value of the \"Prescrip_Note\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PrescriptionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PrescriptionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PrescriptionEdges": {
            "type": "object",
            "properties": {
                "doctor": {
                    "description": "Doctor holds the value of the doctor edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Doctor"
                },
                "drug": {
                    "description": "Drug holds the value of the drug edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Drug"
                },
                "nurse": {
                    "description": "Nurse holds the value of the nurse edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Nurse"
                },
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                }
            }
        },
        "ent.Rent": {
            "type": "object",
            "properties": {
                "added_time": {
                    "description": "AddedTime holds the value of the \"added_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "patient_id": {
                    "type": "integer"
                }
            }
        },
        "ent.RentEdges": {
            "type": "object",
            "properties": {
                "nurse": {
                    "description": "Nurse holds the value of the nurse edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Nurse"
                },
                "patient": {
                    "description": "Patient holds the value of the patient edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Patient"
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Room"
                }
            }
        },
        "ent.Room": {
            "type": "object",
            "properties": {
                "building": {
                    "description": "Building holds the value of the \"building\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomEdges"
                },
                "floor": {
                    "description": "Floor holds the value of the \"floor\" field.",
                    "type": "integer"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RoomEdges": {
            "type": "object",
            "properties": {
                "rents": {
                    "description": "Rents holds the value of the rents edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Rent"
                },
                "roomtype": {
                    "description": "Roomtype holds the value of the roomtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Roomtype"
                }
            }
        },
        "ent.Roomtype": {
            "type": "object",
            "properties": {
                "areasize": {
                    "description": "Areasize holds the value of the \"areasize\" field.",
                    "type": "number"
                },
                "bathroom": {
                    "description": "Bathroom holds the value of the \"bathroom\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoomtypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoomtypeEdges"
                },
                "etc": {
                    "description": "Etc holds the value of the \"etc\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "toilets": {
                    "description": "Toilets holds the value of the \"toilets\" field.",
                    "type": "integer"
                }
            }
        },
        "ent.RoomtypeEdges": {
            "type": "object",
            "properties": {
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Room"
                    }
                }
            }
        },
        "ent.SchemeType": {
            "type": "object",
            "properties": {
                "SchemeType_Name": {
                    "description": "SchemeTypeName holds the value of the \"SchemeType_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SchemeTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.SchemeTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.SchemeTypeEdges": {
            "type": "object",
            "properties": {
                "schemeTypeCoveredPerson": {
                    "description": "SchemeTypeCoveredPerson holds the value of the SchemeType_CoveredPerson edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CoveredPerson"
                    }
                }
            }
        },
        "ent.Tool": {
            "type": "object",
            "properties": {
                "Tool_Name": {
                    "description": "ToolName holds the value of the \"Tool_Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ToolQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ToolEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ToolEdges": {
            "type": "object",
            "properties": {
                "toolOperativerecord": {
                    "description": "ToolOperativerecord holds the value of the Tool_Operativerecord edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Operativerecord"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}