// Code generated by entc, DO NOT EDIT.

package doctor

const (
	// Label holds the string label denoting the doctor type in the database.
	Label = "doctor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDoctorName holds the string denoting the doctor_name field in the database.
	FieldDoctorName = "doctor_name"
	// FieldDoctorPassword holds the string denoting the doctor_password field in the database.
	FieldDoctorPassword = "doctor_password"
	// FieldDoctorEmail holds the string denoting the doctor_email field in the database.
	FieldDoctorEmail = "doctor_email"
	// FieldDoctorTel holds the string denoting the doctor_tel field in the database.
	FieldDoctorTel = "doctor_tel"

	// EdgeDoctorDiagnose holds the string denoting the doctor_diagnose edge name in mutations.
	EdgeDoctorDiagnose = "doctor_diagnose"
	// EdgeDoctorPrescription holds the string denoting the doctor_prescription edge name in mutations.
	EdgeDoctorPrescription = "doctor_prescription"

	// Table holds the table name of the doctor in the database.
	Table = "doctors"
	// DoctorDiagnoseTable is the table the holds the doctor_diagnose relation/edge.
	DoctorDiagnoseTable = "diagnoses"
	// DoctorDiagnoseInverseTable is the table name for the Diagnose entity.
	// It exists in this package in order to avoid circular dependency with the "diagnose" package.
	DoctorDiagnoseInverseTable = "diagnoses"
	// DoctorDiagnoseColumn is the table column denoting the doctor_diagnose relation/edge.
	DoctorDiagnoseColumn = "doctor_id"
	// DoctorPrescriptionTable is the table the holds the doctor_prescription relation/edge.
	DoctorPrescriptionTable = "prescriptions"
	// DoctorPrescriptionInverseTable is the table name for the Prescription entity.
	// It exists in this package in order to avoid circular dependency with the "prescription" package.
	DoctorPrescriptionInverseTable = "prescriptions"
	// DoctorPrescriptionColumn is the table column denoting the doctor_prescription relation/edge.
	DoctorPrescriptionColumn = "doctor_id"
)

// Columns holds all SQL columns for doctor fields.
var Columns = []string{
	FieldID,
	FieldDoctorName,
	FieldDoctorPassword,
	FieldDoctorEmail,
	FieldDoctorTel,
}

var (
	// DoctorNameValidator is a validator for the "Doctor_Name" field. It is called by the builders before save.
	DoctorNameValidator func(string) error
	// DoctorPasswordValidator is a validator for the "Doctor_Password" field. It is called by the builders before save.
	DoctorPasswordValidator func(string) error
	// DoctorEmailValidator is a validator for the "Doctor_Email" field. It is called by the builders before save.
	DoctorEmailValidator func(string) error
	// DoctorTelValidator is a validator for the "Doctor_tel" field. It is called by the builders before save.
	DoctorTelValidator func(string) error
)
